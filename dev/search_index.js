var documenterSearchIndex = {"docs":
[{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"CurrentModule = SFSADocs","category":"page"},{"location":"sqa/#Software-Quality-Assurance","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"","category":"section"},{"location":"sqa/#Tests","page":"Software Quality Assurance","title":"Tests","text":"","category":"section"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"SingleFieldStructArrays.jl uses the usual Julia testing framework to implement and run tests. The tests can be run locally after installing SingleFieldStructArrays.jl, and are also run automatically on GitHub Actions.","category":"page"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"To run the tests locally, from the Julia REPL, type ] to enter the Pkg prompt, then","category":"page"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"(jl_jncZ1E) pkg> test SingleFieldStructArrays\n     Testing SingleFieldStructArrays\n     Testing Running tests...\nTest Summary:           | Pass  Total  Time\nSingleFieldStructArrays |   31     31  4.1s\n     Testing SingleFieldStructArrays tests passed \n\n(jl_jncZ1E) pkg> ","category":"page"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"(The output associated with installing all the dependencies the tests need isn't shown above.)","category":"page"},{"location":"sqa/#Signed-Commits","page":"Software Quality Assurance","title":"Signed Commits","text":"","category":"section"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"The SingleFieldStructArrays.jl GitHub repository requires all commits to the main branch to be signed. See the GitHub docs on signing commits for more information.","category":"page"},{"location":"sqa/#Reporting-Bugs","page":"Software Quality Assurance","title":"Reporting Bugs","text":"","category":"section"},{"location":"sqa/","page":"Software Quality Assurance","title":"Software Quality Assurance","text":"Users can use the GitHub Issues feature to report bugs and submit feature requests.","category":"page"},{"location":"","page":"Reference","title":"Reference","text":"CurrentModule = SFSADocs","category":"page"},{"location":"#SingleFieldStructArrays-Documentation","page":"Reference","title":"SingleFieldStructArrays Documentation","text":"","category":"section"},{"location":"","page":"Reference","title":"Reference","text":"SingleFieldStructArray","category":"page"},{"location":"#SingleFieldStructArrays.SingleFieldStructArray","page":"Reference","title":"SingleFieldStructArrays.SingleFieldStructArray","text":"SingleFieldStructArray(data, Val{fieldname})\n\nCreate a SingleFieldStructArray from an array of structs (data) that acts like an array of the values of fieldname. \n\nExamples\n\njulia> struct Foo3{T} a::T; b::T; c::T; end\njulia> foo3s = Foo3.(1:5, 6:10, 11:15)\n5-element Array{Foo3{Int64},1}:\n Foo3{Int64}(1, 6, 11)\n Foo3{Int64}(2, 7, 12)\n Foo3{Int64}(3, 8, 13)\n Foo3{Int64}(4, 9, 14)\n Foo3{Int64}(5, 10, 15)\n\njulia> as = SingleFieldStructArray(foo3s, Val{:a})\n5-element SingleFieldStructArray{Array{Foo3{Int64},1},Foo3{Int64},:a,Int64,1}:\n 1\n 2\n 3\n 4\n 5\n\njulia> as[3] == 3\ntrue\n\njulia> as[3] = -1\n-1\n\njulia> foo3s\n5-element Array{Foo3{Int64},1}:\n Foo3{Int64}(1, 6, 11)\n Foo3{Int64}(2, 7, 12)\n Foo3{Int64}(-1, 8, 13)\n Foo3{Int64}(4, 9, 14)\n Foo3{Int64}(5, 10, 15)\n\njulia>\n\n\n\n\n\n","category":"type"}]
}
